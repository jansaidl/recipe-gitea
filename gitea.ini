APP_NAME = %GITEA_APP_NAME%
RUN_USER = zerops
WORK_PATH = %GITEA_WORK_DIR%
RUN_MODE = %GITEA_RUN_MODE%

[server]
LOCAL_ROOT_URL = %GITEA__server__LOCAL_ROOT_URL%
SSH_DOMAIN = %GITEA__server__SSH_DOMAIN%
DOMAIN = %GITEA__server__DOMAIN%
HTTP_PORT = %GITEA__server__HTTP_PORT%
ROOT_URL = %GITEA__server__ROOT_URL%
APP_DATA_PATH = %GITEA__server__APP_DATA_PATH%
DISABLE_SSH = %GITEA__server__DISABLE_SSH%
SSH_PORT = %GITEA__server__SSH_PORT%
LFS_START_SERVER = %GITEA__server__LFS_START_SERVER%
LFS_JWT_SECRET = %GITEA__server__LFS_JWT_SECRET%
OFFLINE_MODE = %GITEA__server__OFFLINE_MODE%
START_SSH_SERVER = %GITEA__server__START_SSH_SERVER%

[database]
DB_TYPE = %GITEA__database__DB_TYPE%
HOST = %GITEA__database__HOST%
NAME = %GITEA__database__NAME%
USER = %GITEA__database__USER%
PASSWD = %GITEA__database__PASSWD%
SCHEMA = %GITEA__database__SCHEMA%
SSL_MODE = %GITEA__database__SSL_MODE%
PATH = %GITEA__database__PATH%
LOG_SQL = %GITEA__database__LOG_SQL%

[repository]
ROOT = %GITEA__repository__ROOT%

[lfs]
PATH = %GITEA__lfs__PATH%

[mailer]
ENABLED = %GITEA__mailer__ENABLED%

[service]
REGISTER_EMAIL_CONFIRM = %GITEA__service__REGISTER_EMAIL_CONFIRM%
ENABLE_NOTIFY_MAIL = %GITEA__service__ENABLE_NOTIFY_MAIL%
DISABLE_REGISTRATION = %GITEA__service__DISABLE_REGISTRATION%
ALLOW_ONLY_EXTERNAL_REGISTRATION = %GITEA__service__ALLOW_ONLY_EXTERNAL_REGISTRATION%
ENABLE_CAPTCHA = %GITEA__service__ENABLE_CAPTCHA%
REQUIRE_SIGNIN_VIEW = %GITEA__service__REQUIRE_SIGNIN_VIEW%
DEFAULT_KEEP_EMAIL_PRIVATE = %GITEA__service__DEFAULT_KEEP_EMAIL_PRIVATE%
DEFAULT_ALLOW_CREATE_ORGANIZATION = %GITEA__service__DEFAULT_ALLOW_CREATE_ORGANIZATION%
DEFAULT_ENABLE_TIMETRACKING = %GITEA__service__DEFAULT_ENABLE_TIMETRACKING%
NO_REPLY_ADDRESS = %GITEA__service__NO_REPLY_ADDRESS%

[openid]
ENABLE_OPENID_SIGNIN = %GITEA__openid__ENABLE_OPENID_SIGNIN%
ENABLE_OPENID_SIGNUP = %GITEA__openid__ENABLE_OPENID_SIGNUP%

[cron.update_checker]
ENABLED = %GITEA__cron_update_checker__ENABLED%

[session]
PROVIDER = %GITEA__session__PROVIDER%

[log]
MODE = %GITEA__log__MODE%
LEVEL = %GITEA__log__LEVEL%
ROOT_PATH = %GITEA__log__ROOT_PATH%

[repository.pull-request]
DEFAULT_MERGE_STYLE = merge

[repository.signing]
DEFAULT_TRUST_MODEL = committer

[security]
INSTALL_LOCK = %GITEA__security__INSTALL_LOCK%
INTERNAL_TOKEN = %GITEA__security__INTERNAL_TOKEN%
PASSWORD_HASH_ALGO = %GITEA__security__PASSWORD_HASH_ALGO%
SECRET_KEY = %GITEA__security__SECRET_KEY%

[oauth2]
JWT_SECRET = %GITEA__oauth2__JWT_SECRET%

[storage]
STORAGE_TYPE = %GITEA__storage__STORAGE_TYPE%
; Minio endpoint to connect only available when STORAGE_TYPE is `minio`
MINIO_ENDPOINT = %GITEA__storage__MINIO_ENDPOINT%
; Minio accessKeyID to connect only available when STORAGE_TYPE is `minio`.
; If not provided and STORAGE_TYPE is `minio`, will search for credentials in known
; environment variables (MINIO_ACCESS_KEY_ID, AWS_ACCESS_KEY_ID), credentials files
; (~/.mc/config.json, ~/.aws/credentials), and EC2 instance metadata.
MINIO_ACCESS_KEY_ID = %GITEA__storage__MINIO_ACCESS_KEY_ID%
; Minio secretAccessKey to connect only available when STORAGE_TYPE is `minio`
MINIO_SECRET_ACCESS_KEY = %GITEA__storage__MINIO_SECRET_ACCESS_KEY%
; Preferred IAM Endpoint to override Minio's default IAM Endpoint resolution only available when STORAGE_TYPE is `minio`.
; If not provided and STORAGE_TYPE is `minio`, will search for and derive endpoint from known environment variables
; (AWS_CONTAINER_AUTHORIZATION_TOKEN, AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE, AWS_CONTAINER_CREDENTIALS_RELATIVE_URI,
; AWS_CONTAINER_CREDENTIALS_FULL_URI, AWS_WEB_IDENTITY_TOKEN_FILE, AWS_ROLE_ARN, AWS_ROLE_SESSION_NAME, AWS_REGION), or
; the DefaultIAMRoleEndpoint if not provided otherwise.
MINIO_IAM_ENDPOINT = %GITEA__storage__MINIO_IAM_ENDPOINT%
; Minio bucket to store the attachments only available when STORAGE_TYPE is `minio`
MINIO_BUCKET = %GITEA__storage__MINIO_BUCKET%
; Minio location to create bucket only available when STORAGE_TYPE is `minio`
MINIO_LOCATION = %GITEA__storage__MINIO_LOCATION%
; Minio enabled ssl only available when STORAGE_TYPE is `minio`
MINIO_USE_SSL = %GITEA__storage__MINIO_USE_SSL%
; Minio skip SSL verification available when STORAGE_TYPE is `minio`
MINIO_INSECURE_SKIP_VERIFY = %GITEA__storage__MINIO_INSECURE_SKIP_VERIFY%
SERVE_DIRECT = %GITEA__storage__SERVE_DIRECT%
; Minio bucket lookup method defaults to auto mode; set it to `dns` for virtual host style or `path` for path style, only available when STORAGE_TYPE is `minio`
MINIO_BUCKET_LOOKUP_TYPE = %GITEA__storage__MINIO_BUCKET_LOOKUP_TYPE%